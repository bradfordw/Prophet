Very experimental, early-stage ocilib-based bindings for Erlang.

API is pretty straight-forward (for now):

prophet:init().
{ok, Oci} = prophet:open("DBNAME", "USER", "PASS").

{ok, [{num_rows, N}, {data, Rows}, {columns, Cols}]} = prophet:select(Oci, "select * from schema.users where clue > 0").

{ok, {affected, AffectedRowCount}} = prophet:execute(Oci, "update schema.users set clue = 1 where clue = 0").

Planned functionality (in order):
	Simple instance "ping"
	Notification support
	Hash table support
	Queue support

Currently supports:
	Bind variables (on execution statements, select's soon to follow)